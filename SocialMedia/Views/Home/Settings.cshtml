@{
    ViewData["Title"] = "Settings";
}
@using Service.ViewModels
@model OTPViewModel

<style>
    .custom-btn {
        width: 200px;
    }

    .container {
        max-width: 1400px;
    }

    h2 {
        color: #007bff;
    }

    p {
        color: #555;
    }

    .modal-content {
        border-radius: 30px;
    }

    .modal-footer {
        justify-content: flex-start;
    }

    .btn {
        border-radius: 15px;
        border: none;
    }
</style>

<div class="container mt-5">
    <h2>Settings</h2>
    <p>Your settings content goes here.</p>

    <!-- Delete Account Button -->
    <div class="d-grid gap-2 mb-3">
        <button type="button" class="btn btn-danger btn-sm custom-btn" data-bs-toggle="modal" data-bs-target="#deleteAccountModal">
            DELETE ACCOUNT
        </button>
    </div>

    <!-- Delete Account Modal -->
    <div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteAccountModalLabel">Confirm Delete Account</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete your account? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <!-- Delete Account Form -->
                    <form asp-controller="User" asp-action="DeleteAccount" method="post">
                        <button type="submit" class="btn btn-danger">Delete Account</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- QRCodeOTP -->
    <div class="d-grid gap-2">
        <button type="button" class="btn btn-primary custom-btn" data-bs-toggle="modal" data-bs-target="#qRCodeOTPModal">
            ENABLE QRCodeOTP
        </button>
    </div>

    <!-- QRCodeOTP Modal -->
    <div class="modal fade" id="qRCodeOTPModal" tabindex="-1" aria-labelledby="qRCodeOTPModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="qRCodeOTPModalLabel">QRCodeOTP</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- QRCodeOTP Image -->
                    <img src="data:image/png;base64,@Convert.ToBase64String(Model.OTPQRCode)" alt="qRCodeOTP Image" style="max-width: 100%; height: auto;" />
                    <!-- QRCodeOTP SK -->
                    <form id="qRCodeOTPForm" asp-controller="User" asp-action="SaveQRCodeOTP" method="post">
                        <input type="text" name="QRCodeOTPSK" id="qRCodeOTPSK" value="@Model.OTPQRCodeSK" style="margin-left: 30px; width: 350px;" readonly />
                        <button type="button" id="copyQRCodeOTPSK">Copy</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <!-- Regenerate QR Code Button -->
                    <button type="button" class="btn btn-success" id="regenerateQRCodeOTP">
                        Regenerate QR Code
                    </button>
                    <!-- Save and Enable OTP Button -->
                    <button type="button" class="btn btn-danger" id="saveQRCodeOTP">Save and Enable OTP</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $('#saveQRCodeOTP').on('click', () => $('#qRCodeOTPForm').submit());

        $('#regenerateQRCodeOTP').on('click', async () => {
            try {
                const response = await axios.get('/Home/GetOTPQRCode');
                const { oTPQRCode, oTPQRCodeSK } = response.data;

                $('#qRCodeOTPModal img').attr('src', `data:image/png;base64,${oTPQRCode}`);
                $('#qRCodeOTPSK').val(oTPQRCodeSK);

                console.log('QR Code regenerated successfully.');
            } catch (error) {
                console.error('Failed to regenerate QR code.', error);
            }
        });

        $('#copyQRCodeOTPSK').on('click', () => $('#qRCodeOTPSK').select().focus() && document.execCommand('copy'));
    </script>
}
